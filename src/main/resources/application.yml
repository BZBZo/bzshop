server:
  port: 9999
  netty:
    connection-timeout: 2s
    idle-timeout: 15s
  shutdown: graceful

logging:
  level:
    org.springframework.web: DEBUG
    io.github.resilience4j: DEBUG

spring:
  application:
    name: bz-edge-service
  lifecycle:
    timeout-per-shutdown-phase: 15s
  cloud:
    gateway:
      default-filters:
        - name: Retry
          args:
            retries: 3
            methods: GET
            series: SERVER_ERROR
            exceptions: java.io.IOException, java.util.concurrent.TimeoutException
            backoff:
              firstBackoff: 50ms
              maxBackOff: 500ms
              factor: 2
              basedOnPreviousValue: false
      httpclient:
        connect-timeout: 2000
        response-timeout: 5s
        pool:
          type: elastic
          max-idle-time: 15s
          max-life-time: 60s
      routes:
#        - id: catalog-route
#          uri: ${CATALOG_SERVICE_URL:http://localhost:9001}/books
#          predicates:
#            - Path=/books/**
#          filters:
#            - name: PreGatewayFilter
#            - name: CircuitBreaker
#              args:
#                name: catalogCircuitBreaker
#                fallbackUri: forward:/catalog-fallback

        - id: bz-admin-route
          uri: ${BZ_ADMIN_SERVICE_URL:http://localhost:8086}
          predicates:
            - Path=/admin/**

        - id: bz-customer-route
          uri: ${BZ_CUSTOMER_SERVICE_URL:http://localhost:8087}
          predicates:
            - Path=/customer/**

        - id: bz-seller-route
          uri: ${BZ_SELLER_SERVICE_URL:http://localhost:8088}
          predicates:
            - Path=/product/**

        - id: bz-ad-route
          uri: ${BZ_AD_SERVICE_URL:http://localhost:8089}
          predicates:
            - Path=/ad/**

        - id: bz-ootd-route
          uri: ${BZ_OOTD_SERVICE_URL:http://localhost:8090}
          predicates:
            - Path=/ootd/**
#          filters:
#            - name: CircuitBreaker
#              args:
#                name: orderCircuitBreaker

        - id: bz-auth-route
          uri: ${BZ_AUTH_SERVICE_URL:http://localhost:8085}
          predicates:
            - Path=/auths/**, /oauth2/**
          filters:
            - name: CircuitBreaker
              args:
                name: authCircuitBreaker

#        - id: front-route
#          uri: ${BZ_FRONT_SERVICE:http://localhost:8884}/webs
#          predicates:
#            - Path=/webs/**, /js/**, /css/**

resilience4j:
  circuitbreaker:
    configs:
      default:
        sliding-window-size: 20
        permitted-number-of-calls-in-half-open-state: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 15000
  timelimiter:
    configs:
      default:
        timeout-duration: 5s

bzbzo:
  bz-auth-service-url: ${BZ_AUTH_SERVICE_URL:http://localhost:8085}/auths
#  bz-admin-service-url: ${BZ_ADMIN_SERVICE_URL:http://localhost:8086}/admin
#  bz-customer-service-url: ${BZ_CUSTOMER_SERVICE_URL:http://localhost:8087}/customer
#  bz-seller-service-url: ${BZ_SELLER_SERVICE_URL:http://localhost:8088}/product
#  bz-ad-service-url: ${BZ_AD_SERVICE_URL:http://localhost:8089}/ad
#  bz-ootd-service-url: ${BZ_AD_SERVICE_URL:http://localhost:8090}/ootd


